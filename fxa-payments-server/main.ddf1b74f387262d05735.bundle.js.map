{"version":3,"file":"main.ddf1b74f387262d05735.bundle.js","sources":["webpack:///./src/components/Portal.tsx"],"sourcesContent":["import React, { memo, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport './Portal.scss';\n\ntype PortalProps = {\n  id: string,\n  children: React.ReactNode\n};\n\nconst Portal = ({\n  id,\n  children\n}: PortalProps): React.ReactPortal | null => {\n  let el = document.getElementById(id);\n  if (! el) {\n    el = document.createElement('div');\n    el.setAttribute('class', 'portal');\n    el.setAttribute('id', id);\n    document.body.appendChild(el);\n  }\n\n  useEffect(() => {\n    // Last child out of the portal gets to remove the parent from the DOM.\n    return () => {\n      let el = document.getElementById(id);\n      if (el && el.children.length === 1) {\n        el.remove();\n      }\n    }\n  }, [ id ]);\n\n  return createPortal(children, el);\n};\n\nexport default memo(Portal);"],"mappings":"AAAA","sourceRoot":""}